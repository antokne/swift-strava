//
// GearsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class GearsAPI {
    /**
     Get Equipment

     - parameter _id: (path) The identifier of the gear. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getGearById(_id: String, completion: @escaping ((_ data: DetailedGear?,_ error: Error?) -> Void)) {
        getGearByIdWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get Equipment
     - GET /gear/{id}

     - OAuth:
       - type: oauth2
       - name: strava_oauth
     - examples: [{contentType=application/json, example=""}]
     - parameter _id: (path) The identifier of the gear. 

     - returns: RequestBuilder<DetailedGear> 
     */
    open class func getGearByIdWithRequestBuilder(_id: String) -> RequestBuilder<DetailedGear> {
        var path = "/gear/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<DetailedGear>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
