//
// SegmentEffortsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class SegmentEffortsAPI {
    /**
     List Segment Efforts

     - parameter segmentId: (query) The identifier of the segment. 
     - parameter startDateLocal: (query) ISO 8601 formatted date time. (optional)
     - parameter endDateLocal: (query) ISO 8601 formatted date time. (optional)
     - parameter perPage: (query) Number of items per page. Defaults to 30. (optional, default to 30)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEffortsBySegmentId(segmentId: Int, startDateLocal: Date? = nil, endDateLocal: Date? = nil, perPage: Int? = nil, completion: @escaping ((_ data: [DetailedSegmentEffort]?,_ error: Error?) -> Void)) {
        getEffortsBySegmentIdWithRequestBuilder(segmentId: segmentId, startDateLocal: startDateLocal, endDateLocal: endDateLocal, perPage: perPage).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     List Segment Efforts
     - GET /segment_efforts

     - OAuth:
       - type: oauth2
       - name: strava_oauth
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     - parameter segmentId: (query) The identifier of the segment. 
     - parameter startDateLocal: (query) ISO 8601 formatted date time. (optional)
     - parameter endDateLocal: (query) ISO 8601 formatted date time. (optional)
     - parameter perPage: (query) Number of items per page. Defaults to 30. (optional, default to 30)

     - returns: RequestBuilder<[DetailedSegmentEffort]> 
     */
    open class func getEffortsBySegmentIdWithRequestBuilder(segmentId: Int, startDateLocal: Date? = nil, endDateLocal: Date? = nil, perPage: Int? = nil) -> RequestBuilder<[DetailedSegmentEffort]> {
        let path = "/segment_efforts"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "segment_id": segmentId.encodeToJSON(), 
                        "start_date_local": startDateLocal?.encodeToJSON(), 
                        "end_date_local": endDateLocal?.encodeToJSON(), 
                        "per_page": perPage?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<[DetailedSegmentEffort]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Get Segment Effort

     - parameter _id: (path) The identifier of the segment effort. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getSegmentEffortById(_id: Int64, completion: @escaping ((_ data: DetailedSegmentEffort?,_ error: Error?) -> Void)) {
        getSegmentEffortByIdWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get Segment Effort
     - GET /segment_efforts/{id}

     - OAuth:
       - type: oauth2
       - name: strava_oauth
     - examples: [{contentType=application/json, example=""}]
     - parameter _id: (path) The identifier of the segment effort. 

     - returns: RequestBuilder<DetailedSegmentEffort> 
     */
    open class func getSegmentEffortByIdWithRequestBuilder(_id: Int64) -> RequestBuilder<DetailedSegmentEffort> {
        var path = "/segment_efforts/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<DetailedSegmentEffort>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
