//
// Lap.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct Lap: Codable {

    /** The unique identifier of this lap */
    public var _id: Int64?
    public var activity: MetaActivity?
    public var athlete: MetaAthlete?
    /** The lap&#x27;s average cadence */
    public var averageCadence: Float?
    /** The lap&#x27;s average speed */
    public var averageSpeed: Float?
    /** The lap&#x27;s distance, in meters */
    public var distance: Float?
    /** The lap&#x27;s elapsed time, in seconds */
    public var elapsedTime: Int?
    /** The start index of this effort in its activity&#x27;s stream */
    public var startIndex: Int?
    /** The end index of this effort in its activity&#x27;s stream */
    public var endIndex: Int?
    /** The index of this lap in the activity it belongs to */
    public var lapIndex: Int?
    /** The maximum speed of this lat, in meters per second */
    public var maxSpeed: Float?
    /** The lap&#x27;s moving time, in seconds */
    public var movingTime: Int?
    /** The name of the lap */
    public var name: String?
    /** The athlete&#x27;s pace zone during this lap */
    public var paceZone: Int?
    public var split: Int?
    /** The time at which the lap was started. */
    public var startDate: Date?
    /** The time at which the lap was started in the local timezone. */
    public var startDateLocal: Date?
    /** The elevation gain of this lap, in meters */
    public var totalElevationGain: Float?

    public init(_id: Int64? = nil, activity: MetaActivity? = nil, athlete: MetaAthlete? = nil, averageCadence: Float? = nil, averageSpeed: Float? = nil, distance: Float? = nil, elapsedTime: Int? = nil, startIndex: Int? = nil, endIndex: Int? = nil, lapIndex: Int? = nil, maxSpeed: Float? = nil, movingTime: Int? = nil, name: String? = nil, paceZone: Int? = nil, split: Int? = nil, startDate: Date? = nil, startDateLocal: Date? = nil, totalElevationGain: Float? = nil) {
        self._id = _id
        self.activity = activity
        self.athlete = athlete
        self.averageCadence = averageCadence
        self.averageSpeed = averageSpeed
        self.distance = distance
        self.elapsedTime = elapsedTime
        self.startIndex = startIndex
        self.endIndex = endIndex
        self.lapIndex = lapIndex
        self.maxSpeed = maxSpeed
        self.movingTime = movingTime
        self.name = name
        self.paceZone = paceZone
        self.split = split
        self.startDate = startDate
        self.startDateLocal = startDateLocal
        self.totalElevationGain = totalElevationGain
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case activity
        case athlete
        case averageCadence = "average_cadence"
        case averageSpeed = "average_speed"
        case distance
        case elapsedTime = "elapsed_time"
        case startIndex = "start_index"
        case endIndex = "end_index"
        case lapIndex = "lap_index"
        case maxSpeed = "max_speed"
        case movingTime = "moving_time"
        case name
        case paceZone = "pace_zone"
        case split
        case startDate = "start_date"
        case startDateLocal = "start_date_local"
        case totalElevationGain = "total_elevation_gain"
    }

}
