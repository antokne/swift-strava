//
// SummaryClub.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct SummaryClub: Codable {

    public enum SportType: String, Codable { 
        case cycling = "cycling"
        case running = "running"
        case triathlon = "triathlon"
        case other = "other"
    }
    /** The club&#x27;s unique identifier. */
    public var _id: Int64?
    /** Resource state, indicates level of detail. Possible values: 1 -&gt; \&quot;meta\&quot;, 2 -&gt; \&quot;summary\&quot;, 3 -&gt; \&quot;detail\&quot; */
    public var resourceState: Int?
    /** The club&#x27;s name. */
    public var name: String?
    /** URL to a 60x60 pixel profile picture. */
    public var profileMedium: String?
    /** URL to a ~1185x580 pixel cover photo. */
    public var coverPhoto: String?
    /** URL to a ~360x176  pixel cover photo. */
    public var coverPhotoSmall: String?
    /** Deprecated. Prefer to use activity_types. */
    public var sportType: SportType?
    /** The activity types that count for a club. This takes precedence over sport_type. */
    public var activityTypes: [ActivityType]?
    /** The club&#x27;s city. */
    public var city: String?
    /** The club&#x27;s state or geographical region. */
    public var state: String?
    /** The club&#x27;s country. */
    public var country: String?
    /** Whether the club is private. */
    public var _private: Bool?
    /** The club&#x27;s member count. */
    public var memberCount: Int?
    /** Whether the club is featured or not. */
    public var featured: Bool?
    /** Whether the club is verified or not. */
    public var verified: Bool?
    /** The club&#x27;s vanity URL. */
    public var url: String?

    public init(_id: Int64? = nil, resourceState: Int? = nil, name: String? = nil, profileMedium: String? = nil, coverPhoto: String? = nil, coverPhotoSmall: String? = nil, sportType: SportType? = nil, activityTypes: [ActivityType]? = nil, city: String? = nil, state: String? = nil, country: String? = nil, _private: Bool? = nil, memberCount: Int? = nil, featured: Bool? = nil, verified: Bool? = nil, url: String? = nil) {
        self._id = _id
        self.resourceState = resourceState
        self.name = name
        self.profileMedium = profileMedium
        self.coverPhoto = coverPhoto
        self.coverPhotoSmall = coverPhotoSmall
        self.sportType = sportType
        self.activityTypes = activityTypes
        self.city = city
        self.state = state
        self.country = country
        self._private = _private
        self.memberCount = memberCount
        self.featured = featured
        self.verified = verified
        self.url = url
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case resourceState = "resource_state"
        case name
        case profileMedium = "profile_medium"
        case coverPhoto = "cover_photo"
        case coverPhotoSmall = "cover_photo_small"
        case sportType = "sport_type"
        case activityTypes = "activity_types"
        case city
        case state
        case country
        case _private = "private"
        case memberCount = "member_count"
        case featured
        case verified
        case url
    }

}
